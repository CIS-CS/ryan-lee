package ods;

import java.io.File;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.StringTokenizer;
import javax.swing.UIManager;
import javax.swing.JOptionPane;

import org.jopendocument.dom.spreadsheet.SpreadSheet;
import org.jopendocument.dom.spreadsheet.Sheet;
import org.jopendocument.dom.spreadsheet.MutableCell;

/**
 * MHTable.java
 * Shows how to add and removes rows from a JTable.
 *
 * 1. In the properties for the JTable, the model is set to 'Custom code'.
 *
 * 2. There are two actionListeners: one for the Add and Delete buttons.
 *
 * 3. Note the inner class called MyTableModel. This is the table model
 *    for the JTable. Within the table model, the data for this example is
 *    stored in an ArrayList object.
 *    The default is to store the data in an Object[][] array.
 *    It is better to create your own table model. More flexible.
 * 
 * 4. The code for MyTableModel came from the Sun Tutorial
 *    http://java.sun.com/docs/books/tutorial/uiswing/components/table.html
 *    See the section called, Creating a Table Model.
 *
 * @author Mark Hayes
 */
public class GradeBookApp extends javax.swing.JFrame {

    /** Creates new form MHTable */
    public GradeBookApp() {
        initComponents();
        try {
            readDataFile();
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Read failed: " + e.toString(),
                    "Read File", JOptionPane.ERROR_MESSAGE);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        tablePanel = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        addPanel = new javax.swing.JPanel();
        firstNameLabel = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        lastNameLabel = new javax.swing.JLabel();
        lastName = new javax.swing.JTextField();
        deletePanel = new javax.swing.JPanel();
        deleteButton = new javax.swing.JButton();
        deleteLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Grade Book");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("  Students  "));

        studentTable.setModel(new ods.GradeBookModel());
        studentTable.setColumnSelectionAllowed(true);
        studentTable.setFillsViewportHeight(true);
        studentTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablePanel.setViewportView(studentTable);

        addPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(" Add "));

        firstNameLabel.setText("First name");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        lastNameLabel.setText("Last name");

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameLabel)
                            .addComponent(lastNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastName, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(firstName, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                        .addContainerGap(121, Short.MAX_VALUE)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(addButton))
        );

        deletePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(" Delete "));

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        deleteLabel.setText("Delete the selected student.");

        javax.swing.GroupLayout deletePanelLayout = new javax.swing.GroupLayout(deletePanel);
        deletePanel.setLayout(deletePanelLayout);
        deletePanelLayout.setHorizontalGroup(
            deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteLabel)
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deletePanelLayout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addComponent(deleteButton)
                .addContainerGap())
        );
        deletePanelLayout.setVerticalGroup(
            deletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletePanelLayout.createSequentialGroup()
                .addComponent(deleteLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteButton))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deletePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(addPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE))
                .addContainerGap())
        );

        fileMenu.setText("File");
        menuBar.add(fileMenu);

        helpMenu.setText("Help");
        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Reads data file into table model.
    // Called when application starts
    private void readDataFile() throws Exception {

        File odsIn = new File("c:\\contact-info-7D.ods");
        GradeBookModel model = (GradeBookModel)studentTable.getModel();

        try {
            //FileReader fr = new FileReader(dataFile);
            //BufferedReader br = new BufferedReader(fr);

            Sheet sheet = SpreadSheet.createFromFile(odsIn).getSheet(0);
            for (int row = 0; row <= 18; row++) {
                MutableCell cell = sheet.getCellAt(1, row);
                String value = cell.getTextValue();
                System.out.println(value);
            }


            /*
            String record = br.readLine();
            while (record != null) {
                StringTokenizer st = new StringTokenizer(record, ",");
                Student student = new Student(st.nextToken(), st.nextToken());
                model.add(student);
                record = br.readLine();
            }
            br.close();
            */
        }
        catch(Exception e) {
            throw e;
        }
    }

    // Add button pressed
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        // Get the table model
        GradeBookModel model = (GradeBookModel)studentTable.getModel();
        // Add the new student to the table
        model.add(new Student(firstName.getText(), lastName.getText()));
        
}//GEN-LAST:event_addButtonActionPerformed

    // Delete button pressed
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        // Check to see if user selected a row
        int row = studentTable.getSelectedRow();
        
        if (row != -1) {            // -1 means no row selected
            // Get the table model
            GradeBookModel model = (GradeBookModel)studentTable.getModel();
            // Remove the selected student from the table
            model.delete(row);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    // User pressed the red X button
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        shutdownApplication();
    }//GEN-LAST:event_formWindowClosing

    private void shutdownApplication() {

        try {
            // Delete the old data file
            File f = new File("c:\\student-data.txt");
            f.delete();

            // Create new file
            FileWriter fr = new FileWriter("c:\\student-data.txt");
            PrintWriter pr = new PrintWriter(fr);

            // Get the table model
            GradeBookModel model = (GradeBookModel)studentTable.getModel();

            // Save data from model to new file
            for (int row = 0; row < model.getRowCount(); row++) {
                Student s = model.get(row);
                pr.println(s.getFirstName() + "," + s.getLastName());
            }
            pr.close();
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Close File",
                    e.toString(), JOptionPane.ERROR_MESSAGE);
        }
        System.exit(0);
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {

        // Set the look and feel
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (Exception ex) {
            // Ignore exception because we can't do anything.  Will use default.
            ;
        }
        // Start the application
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GradeBookApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JPanel addPanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel deleteLabel;
    private javax.swing.JPanel deletePanel;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JTextField firstName;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JTextField lastName;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTable studentTable;
    private javax.swing.JScrollPane tablePanel;
    // End of variables declaration//GEN-END:variables

}
